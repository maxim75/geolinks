{"version":3,"sources":["Geolinks.js","_ResourcesAll.js"],"names":["geolink","mod","fieldMatchRegExp","toDms","deg","d","parseInt","md","Math","abs","m","toDegrees","x","PI","toBoundingBox","data","radius","zoom","lngOffset","cos","lat","latOffset","south","north","east","lng","west","defaultData","title","language","converters","{latdegdec}","{londegdec}","{osmzoom}","{title}","{titlee}","encodeURIComponent","{language}","{latdegabs}","{latminint}","{latsecdec}","toFixed","{latNS}","{londegabs}","{lonminint}","{lonsecdec}","{lonEW}","{bbSouth}","{bbNorth}","{bbEast}","{bbWest}","parsers","n","r","f","length","floor","parseFloat","getLinkFromTemplate","template","replace","getFieldsFromTemplate","match","getLink","resourceId","resource","resourcesHash","parseUrl","url","result","formatIdx","parser","obj1","obj2","i","hasOwnProperty","extendObject","module","exports","resources","id","tags","forEach"],"mappings":"AAOA,ICAAA,SDEA,SAAAC,GAEA,IAAAC,EAAA,aAEAC,EAAA,SAAAC,GACA,IAAAC,EAAAC,SAAAF,EAAA,IACAG,EAAA,GAAAC,KAAAC,IAAAL,EAAAC,GACAK,EAAAJ,SAAAC,EAAA,IAEA,MAAA,CAAAF,EAAAK,EADA,IAAAH,EAAAG,KAQAC,EAAA,SAAAC,GACA,OAAA,IAAAA,EAAAJ,KAAAK,IAOAC,EAAA,SAAAC,GACA,IACAC,GAAAD,EAAAE,KALA,GAOAC,EAAAP,EAAAK,EAHA,KAGAR,KAAAW,IAAAJ,EAAAK,IAfAZ,KAAAK,GAAA,MAgBAQ,EAAAV,EAAAK,EAJA,MAMA,MAAA,CACAM,MAAAP,EAAAK,IAAAC,EACAE,MAAAR,EAAAK,IAAAC,EACAG,KAAAT,EAAAU,IAAAP,EACAQ,KAAAX,EAAAU,IAAAP,IAIAS,EAAA,CACAP,IAAA,EACAK,IAAA,EACAR,KAAA,GACAW,MAAA,GACAC,SAAA,MAYA5B,EAAA6B,WAAA,CACAC,cAAA,SAAAhB,GAAA,OAAAA,EAAAK,KACAY,cAAA,SAAAjB,GAAA,OAAAA,EAAAU,KACAQ,YAAA,SAAAlB,GAAA,OAAAA,EAAAE,MACAiB,UAAA,SAAAnB,GAAA,OAAAA,EAAAa,OACAO,WAAA,SAAApB,GAAA,OAAAqB,mBAAArB,EAAAa,QACAS,aAAA,SAAAtB,GAAA,OAAAA,EAAAc,UAAA,MACAS,cAAA,SAAAvB,GAAA,OAAAP,KAAAC,IAAAN,EAAAY,EAAAK,KAAA,KACAmB,cAAA,SAAAxB,GAAA,OAAAZ,EAAAY,EAAAK,KAAA,IACAoB,cAAA,SAAAzB,GAAA,OAAAZ,EAAAY,EAAAK,KAAA,GAAAqB,QAAA,IACAC,UAAA,SAAA3B,GAAA,OAAAA,EAAAK,IAAA,EAAA,IAAA,KACAuB,cAAA,SAAA5B,GAAA,OAAAP,KAAAC,IAAAN,EAAAY,EAAAU,KAAA,KACAmB,cAAA,SAAA7B,GAAA,OAAAZ,EAAAY,EAAAU,KAAA,IACAoB,cAAA,SAAA9B,GAAA,OAAAZ,EAAAY,EAAAU,KAAA,GAAAgB,QAAA,IACAK,UAAA,SAAA/B,GAAA,OAAAA,EAAAU,IAAA,EAAA,IAAA,KACAsB,YAAA,SAAAhC,GAAA,OAAAD,EAAAC,GAAAO,OACA0B,YAAA,SAAAjC,GAAA,OAAAD,EAAAC,GAAAQ,OACA0B,WAAA,SAAAlC,GAAA,OAAAD,EAAAC,GAAAS,MACA0B,WAAA,SAAAnC,GAAA,OAAAD,EAAAC,GAAAW,OAGAzB,EAAAkD,QAAA,CAGA,CACAC,EAAA,UACAC,EAAA,qFACAC,EAAA,SAAAD,GACA,GAAAA,GAAA,IAAAA,EAAAE,OAAA,CACA/C,KAAAgD,MAAAC,WAAAJ,EAAA,KACA,MAAA,CAAAjC,IAAAiC,EAAA,GAAA5B,IAAA4B,EAAA,IAGA,OAAA,OAIA,CACAD,EAAA,cACAC,EAAA,qEACAC,EAAA,SAAAD,GACA,GAAAA,GAAA,IAAAA,EAAAE,OAAA,CACA,IAAAtC,EAAAT,KAAAgD,MAAAC,WAAAJ,EAAA,KACA,MAAA,CAAAjC,IAAAiC,EAAA,GAAA5B,IAAA4B,EAAA,GAAApC,KAAAA,GAGA,OAAA,OAIA,CACAmC,EAAA,UACAC,EAAA,gCACAC,EAAA,SAAAD,GACA,OAAAA,GAAA,IAAAA,EAAAE,OAAA,CAAAnC,IAAAiC,EAAA,GAAA5B,IAAA4B,EAAA,IAAA,QAKApD,EAAAyD,oBAAA,SAAAC,EAAA5C,GAIA,OAAA4C,EAAAC,QAAA1D,EAHA,SAAAU,GACA,OAAAX,EAAA6B,WAAAlB,GAAAX,EAAA6B,WAAAlB,GAAAG,GAAAH,KAKAX,EAAA4D,sBAAA,SAAAF,GACA,OAAAA,EAAAG,MAAA5D,IAGAD,EAAA8D,QAAA,SAAAC,EAAAjD,GACA,IAAAkD,EAAAhE,EAAAiE,cAAAF,GAEA,IAAAC,EAAA,KAAA,wBAAAD,EACA,OAAA/D,EAAAyD,oBAAAO,EAAAN,SAAA5C,IAGAd,EAAAkE,SAAA,SAAAC,GACA,IAAAC,EAAA,GAEA,IAAA,IAAAC,KAAArE,EAAAkD,QAAA,CACA,IAAAoB,EAAAtE,EAAAkD,QAAAmB,GAEA,GADAD,EAAAE,EAAAjB,EAAAc,EAAAN,MAAAS,EAAAlB,IACA,MAEA,OAAAgB,EA9FA,SAAAG,EAAAC,GACA,IAAA,IAAAC,KAAAD,EACAD,EAAAG,eAAAD,KACAF,EAAAE,GAAAD,EAAAC,IAGA,OAAAF,EAwFAI,CAAAP,EAAA1C,GAAA,MA7IA,CAFA3B,QAAAA,SAAA,IAoJA,oBAAA6E,SAAAA,OAAAC,QAAA9E,SClJA,SAAAC,GAEAA,EAAA8E,UAAA,CACA,CACAC,GAAA,OACArB,SACA,gIAGA,CACAqB,GAAA,SACArB,SACA,kHAGA,CACAqB,GAAA,MACArB,SACA,4FAGA,CACAqB,GAAA,SACArB,SACA,yGAGA,CACAqB,GAAA,kBACArB,SACA,8EACAsB,KAAA,CAAA,UAGA,CACAD,GAAA,UACArB,SACA,gHACAsB,KAAA,CAAA,eAGA,CACAD,GAAA,cACArB,SACA,+GAGA,CACAqB,GAAA,YACArB,SACA,kFAGA,CACAqB,GAAA,WACArB,SACA,yGAGA,CACAqB,GAAA,UACArB,SACA,+GACAsB,KAAA,CAAA,UAGA,CACAD,GAAA,SACArB,SACA,6EACAsB,KAAA,CAAA,UAGA,CACAD,GAAA,YACArB,SACA,gFACAsB,KAAA,CAAA,UAGA,CACAD,GAAA,gBACArB,SACA,iEACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,0BACArB,SACA,sHACAsB,KAAA,CAAA,eAGA,CACAD,GAAA,YACArB,SACA,wEACAsB,KAAA,CAAA,UAGA,CACAD,GAAA,8BACArB,SACA,8GACAsB,KAAA,CAAA,cAAA,eAGA,CACAD,GAAA,gBACArB,SACA,qHACAsB,KAAA,CAAA,cAAA,eAGA,CACAD,GAAA,SACArB,SACA,iGACAsB,KAAA,CAAA,cAAA,eAGA,CACAD,GAAA,sBACArB,SACA,8IACAsB,KAAA,CAAA,QAGA,CACAD,GAAA,UACArB,SACA,6JACAsB,KAAA,IAGA,CACAD,GAAA,YACArB,SACA,4EACAsB,KAAA,IAGA,CACAD,GAAA,aACArB,SACA,yEACAsB,KAAA,IAGA,CACAD,GAAA,OACArB,SACA,+EACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,gBACArB,SACA,mGACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,SACArB,SAAA,0BACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,MACArB,SAAA,iCACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,UACArB,SACA,mEACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,qBACArB,SAAA,mDACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,6BACArB,SAAA,2CACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,UACArB,SAAA,8BACAsB,KAAA,CAAA,cAGA,CACAD,GAAA,kBACArB,SACA,mEACAsB,KAAA,IAGA,CACAD,GAAA,aACArB,SACA,qFACAsB,KAAA,IAGA,CACAD,GAAA,WACArB,SAAA,2DACAsB,KAAA,IAEA,CACAD,GAAA,cACArB,SAAA,oGAIA1D,EAAAiE,cAAA,GAEAjE,EAAA8E,UAAAG,QAAA,SAAAtE,GACAX,EAAAiE,cAAAtD,EAAAoE,IAAApE,IArOA,CAFAZ,QAAAA,SAAA","file":"geolinks.min.js","sourcesContent":["/* \r\n * Copyright (C) 2015 Maksym Kozlenko <max@kozlenko.info>\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license.  See the LICENSE file for details.\r\n */\r\n\r\n var geolink = geolink || {};\r\n\r\n (function(mod) {\r\n\r\n \tvar fieldMatchRegExp = /\\{\\S+?\\}/mg;\r\n\r\n\tvar toDms = function(deg) {\r\n        var d = parseInt(deg, 10);\r\n        var md = Math.abs(deg-d) * 60;\r\n        var m = parseInt(md, 10);\r\n        var sd = (md - m) * 60;\r\n        return [d, m, sd];\r\n    };\r\n\r\n    var toRad = function(x) {\r\n\t\treturn x * Math.PI / 180;\r\n\t};\r\n\r\n\tvar toDegrees = function(x) {\r\n\t\treturn x * 180 / Math.PI;\r\n\t};\r\n\r\n\tvar zoomToRadius = function(zoom) {\r\n\t\treturn 5;\r\n\t};\r\n\r\n\tvar toBoundingBox = function(data) {\r\n\t\tvar R = 6371;  // earth radius in km\r\n\t\tvar radius = zoomToRadius(data.zoom); // km\r\n\r\n\t\tvar lngOffset = toDegrees(radius/R/Math.cos(toRad(data.lat)));\r\n\t\tvar latOffset = toDegrees(radius/R);\r\n\r\n\t\treturn {\r\n\t\t\t\"south\": data.lat - latOffset,\r\n\t\t\t\"north\": data.lat + latOffset,\r\n\t\t\t\"east\": data.lng + lngOffset,\r\n\t\t\t\"west\": data.lng - lngOffset,\r\n\t\t};\r\n\t};\r\n\r\n\tvar defaultData = {\r\n\t\tlat: 0, \r\n\t\tlng:  0, \r\n\t\tzoom: 15, \r\n\t\ttitle: \"\", \r\n\t\tlanguage: \"en\"\r\n\t};\r\n\r\n\tvar extendObject = function(obj1, obj2) {\r\n       for (var i in obj2) {\r\n          if (!obj1.hasOwnProperty(i)) {\r\n             obj1[i] = obj2[i];\r\n          }\r\n       }\r\n       return obj1;\r\n    };\r\n\r\n\tmod.converters = {\r\n\t\t\"{latdegdec}\": function(data) { return data.lat; },\r\n\t\t\"{londegdec}\": function(data) { return data.lng; },\r\n\t\t\"{osmzoom}\": function(data) { return data.zoom; },\r\n\t\t\"{title}\": function(data) { return data.title; },\r\n\t\t\"{titlee}\": function(data) { return encodeURIComponent(data.title); },\r\n\t\t\"{language}\": function(data) { return data.language || \"en\"; },\r\n\t\t\"{latdegabs}\": function(data) { return Math.abs(toDms(data.lat)[0]); },\r\n\t\t\"{latminint}\": function(data) { return toDms(data.lat)[1]; },\r\n\t\t\"{latsecdec}\": function(data) { return toDms(data.lat)[2].toFixed(4); },\r\n\t\t\"{latNS}\": function(data) { return data.lat < 0 ? \"S\" : \"N\"; },\r\n\t\t\"{londegabs}\": function(data) { return Math.abs(toDms(data.lng)[0]); },\r\n\t\t\"{lonminint}\": function(data) { return toDms(data.lng)[1]; },\r\n\t\t\"{lonsecdec}\": function(data) { return toDms(data.lng)[2].toFixed(4); },\r\n\t\t\"{lonEW}\": function(data) { return data.lng < 0 ? \"W\" : \"E\"; },\r\n\t\t\"{bbSouth}\": function(data) { return toBoundingBox(data).south; },\r\n\t\t\"{bbNorth}\": function(data) { return toBoundingBox(data).north; },\r\n\t\t\"{bbEast}\": function(data) { return toBoundingBox(data).east; },\r\n\t\t\"{bbWest}\": function(data) { return toBoundingBox(data).west; },\r\n\t};\r\n\r\n\tmod.parsers = [\r\n\r\n\r\n\t\t{ \r\n\t\t\tn: \"geohack\",\r\n\t\t\tr: /https:\\/\\/tools.wmflabs.org\\/geohack.*=(-?\\d+\\.?\\d+?)_([NS])_(-?\\d+\\.?\\d+?)_([EW])/, \r\n\t\t\tf: function(r) { \r\n\t\t\t\tif(r && r.length === 5) {\r\n\t\t\t\t\tvar zoom = Math.floor(parseFloat(r[3]));\r\n\t\t\t\t\treturn { lat: r[1], lng: r[3] };\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t},\r\n\t\t{ \r\n\t\t\tn: \"Google Maps\",\r\n\t\t\tr: /https?:\\/\\/www\\.google\\..*@(-?\\d+\\.\\d+),(-?\\d+\\.\\d+),(\\d+\\.?\\d?)+z/, \r\n\t\t\tf: function(r) { \r\n\t\t\t\tif(r && r.length === 4) {\r\n\t\t\t\t\tvar zoom = Math.floor(parseFloat(r[3]));\r\n\t\t\t\t\treturn { lat: r[1], lng: r[2], zoom: zoom };\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t},\r\n\t\t{ \r\n\t\t\tn: \"lat,lng\",\r\n\t\t\tr: /(-?\\d+\\.\\d+)[;, ](-?\\d+\\.\\d+)/, \r\n\t\t\tf: function(r) { \r\n\t\t\t\treturn (r && r.length === 3) ? { lat: r[1], lng: r[2] } : null; \r\n\t\t\t} \r\n\t\t} \r\n\t];\r\n\r\n\tmod.getLinkFromTemplate = function(template, data) {\r\n\t\tvar convertFunc = function(x) {\r\n\t\t\treturn mod.converters[x] ? mod.converters[x](data) : x;\r\n\t\t};\r\n\t\treturn template.replace(fieldMatchRegExp, convertFunc);\r\n\t};\r\n\r\n\tmod.getFieldsFromTemplate = function(template) {\r\n\t\treturn template.match(fieldMatchRegExp);\r\n\t};\r\n\r\n\tmod.getLink = function(resourceId, data) {\r\n\t\tvar resource = mod.resourcesHash[resourceId];\r\n\r\n\t\tif(!resource) throw (\"Invalid resource ID: \" + resourceId);\r\n\t\treturn mod.getLinkFromTemplate(resource.template, data);\r\n\t};\r\n\r\n\tmod.parseUrl = function(url) {\r\n\t\tvar result = {};\r\n\r\n\t\tfor(var formatIdx in mod.parsers) {\r\n\t\t\tvar parser = mod.parsers[formatIdx];\r\n\t\t\tresult = parser.f(url.match(parser.r));\r\n\t\t\tif(result) break;\r\n\t\t}\r\n\t\treturn result ? extendObject(result, defaultData) : null;\r\n\t};\r\n\r\n})(geolink);\r\n\r\nif(typeof module !== 'undefined') module.exports = geolink;","/*\r\n * Copyright (C) 2015 Maksym Kozlenko <max@kozlenko.info>\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license.  See the LICENSE file for details.\r\n */\r\n\r\nvar geolink = geolink || {};\r\n\r\n(function(mod) {\r\n  // https://en.wikipedia.org/wiki/Template:GeoTemplate\r\n  mod.resources = [\r\n    {\r\n      id: \"bing\",\r\n      template:\r\n        \"https://www.bing.com/maps/?v=2&cp={latdegdec}~{londegdec}&style=r&lvl={osmzoom}&sp=Point.{latdegdec}_{londegdec}_{titlee}___\"\r\n    },\r\n\r\n    {\r\n      id: \"google\",\r\n      template:\r\n        \"https://www.google.com/maps?ll={latdegdec},{londegdec}&q={latdegdec},{londegdec}&hl={language}&t=m&z={osmzoom}\"\r\n    },\r\n\r\n    {\r\n      id: \"osm\",\r\n      template:\r\n        \"https://www.openstreetmap.org/?mlat={latdegdec}&mlon={londegdec}&zoom={osmzoom}&layers=M\"\r\n    },\r\n\r\n    {\r\n      id: \"yandex\",\r\n      template:\r\n        \"https://maps.yandex.ru/?ll={londegdec},{latdegdec}&spn={span},{span}&l=map&pt={londegdec},{latdegdec}\"\r\n    },\r\n\r\n    {\r\n      id: \"fotki.yandex.ru\",\r\n      template:\r\n        \"https://fotki.yandex.ru/map/?lng={latdegdec}&lat={londegdec}&zoom={osmzoom}\",\r\n      tags: [\"photo\"]\r\n    },\r\n\r\n    {\r\n      id: \"visicom\",\r\n      template:\r\n        \"http://maps.visicom.ua/#lng={londegdec};lat={latdegdec};z=6;map=ukraine_en;lngm={londegdec};latm={latdegdec};\",\r\n      tags: [\"country-ua\"]\r\n    },\r\n\r\n    {\r\n      id: \"acme mapper\",\r\n      template:\r\n        \"http://mapper.acme.com/?ll={latdegdec},{londegdec}&z={osmzoom}&t=M&marker0={latdegdec},{londegdec},{titlee}\"\r\n    },\r\n\r\n    {\r\n      id: \"arctic.io\",\r\n      template:\r\n        \"http://www.arctic.io/wikipedia/?lon={londegdec}&lat={latdegdec}&title={titlee}\"\r\n    },\r\n\r\n    {\r\n      id: \"wikidata\",\r\n      template:\r\n        \"https://tools.wmflabs.org/wikidata-todo/around.html?lat={latdegdec}&lon={londegdec}&radius=15&lang=en\"\r\n    },\r\n\r\n    {\r\n      id: \"commons\",\r\n      template:\r\n        \"https://tools.wmflabs.org/wiwosm/osm-on-ol/commons-on-osm.php?zoom={osmzoom}&lat={latdegdec}&lon={londegdec}\",\r\n      tags: [\"photo\"]\r\n    },\r\n\r\n    {\r\n      id: \"flickr\",\r\n      template:\r\n        \"https://www.flickr.com/map/?fLat={latdegdec}&fLon={londegdec}&zl={osmzoom}\",\r\n      tags: [\"photo\"]\r\n    },\r\n\r\n    {\r\n      id: \"panoramio\",\r\n      template:\r\n        \"http://www.panoramio.com/map/#lt={latdegdec}&ln={londegdec}&z=0&k=0&a=1&tab=1\",\r\n      tags: [\"photo\"]\r\n    },\r\n\r\n    {\r\n      id: \"flightradar24\",\r\n      template:\r\n        \"http://www.flightradar24.com/{latdegdec},{londegdec}/{osmzoom}\",\r\n      tags: [\"transport\"]\r\n    },\r\n\r\n    {\r\n      id: \"street-directory.com.au\",\r\n      template:\r\n        \"http://www.street-directory.com.au/sd_new/genmap.cgi?x={londegdec}&y={latdegdec}&sizex=800&sizey=800&level=5&star=6\",\r\n      tags: [\"country-au\"]\r\n    },\r\n\r\n    {\r\n      id: \"mapillary\",\r\n      template:\r\n        \"http://www.mapillary.com/map/search/{latdegdec}/{londegdec}/{osmzoom}\",\r\n      tags: [\"photo\"]\r\n    },\r\n\r\n    {\r\n      id: \"commercialrealestate.com.au\",\r\n      template:\r\n        \"http://www.commercialrealestate.com.au/for-sale/?bb={bbNorth}%2C{bbSouth}%2C{bbEast}%2C{bbWest}%2C{osmzoom}\",\r\n      tags: [\"real estate\", \"country-au\"]\r\n    },\r\n\r\n    {\r\n      id: \"domain.com.au\",\r\n      template:\r\n        \"http://www.domain.com.au/search/buy/?mode=buy&displmap=1&startloc={bbSouth}%2c{bbWest}&endloc={bbNorth}%2c{bbEast}\",\r\n      tags: [\"real estate\", \"country-au\"]\r\n    },\r\n\r\n    {\r\n      id: \"zillow\",\r\n      template:\r\n        \"http://www.zillow.com/homes/for_sale/featured_sort/{bbNorth},{bbEast},{bbSouth},{bbWest}_rect/\",\r\n      tags: [\"real estate\", \"country-us\"]\r\n    },\r\n\r\n    {\r\n      id: \"osm missing streets\",\r\n      template:\r\n        \"http://tools.geofabrik.de/osmi/?view=highways&lon={londegdec}&lat={latdegdec}&zoom={osmzoom}&overlays=name_missing_major,name_missing_minor\",\r\n      tags: [\"osm\"]\r\n    },\r\n\r\n    {\r\n      id: \"geohack\",\r\n      template:\r\n        \"https://tools.wmflabs.org/geohack/geohack.php?pagename=Test&params={latdegabs}_{latminint}_{latsecdec}_{latNS}_{londegabs}_{lonminint}_{lonsecdec}_{lonEW}\",\r\n      tags: []\r\n    },\r\n\r\n    {\r\n      id: \"wikimapia\",\r\n      template:\r\n        \"http://wikimapia.org/#lang=en&lat={latdegdec}&lon={londegdec}&z={osmzoom}\",\r\n      tags: []\r\n    },\r\n\r\n    {\r\n      id: \"geocaching\",\r\n      template:\r\n        \"https://www.geocaching.com/map/?ll={latdegdec},{londegdec}&z={osmzoom}\",\r\n      tags: []\r\n    },\r\n\r\n    {\r\n      id: \"waze\",\r\n      template:\r\n        \"https://www.waze.com/livemap/?zoom={osmzoom}&lat={latdegdec}&lon={londegdec}\",\r\n      tags: [\"transport\"]\r\n    },\r\n\r\n    {\r\n      id: \"marinetraffic\",\r\n      template:\r\n        \"https://www.marinetraffic.com/en/ais/home/centerx:{londegdec}/centery:{latdegdec}/zoom:{osmzoom}\",\r\n      tags: [\"transport\"]\r\n    },\r\n\r\n    {\r\n      id: \"latlon\",\r\n      template: \"{latdegdec},{londegdec}\",\r\n      tags: [\"geoformat\"]\r\n    },\r\n\r\n    {\r\n      id: \"wkt\",\r\n      template: \"POINT({londegdec} {latdegdec})\",\r\n      tags: [\"geoformat\"]\r\n    },\r\n\r\n    {\r\n      id: \"geojson\",\r\n      template:\r\n        '{ \"type\": \"Point\", \"coordinates\": [ {londegdec}, {latdegdec} ] }',\r\n      tags: [\"geoformat\"]\r\n    },\r\n\r\n    {\r\n      id: \"wikipedia template\",\r\n      template: \"{{Coord |{latdegdec}|{londegdec}display=title} }\",\r\n      tags: [\"geoformat\"]\r\n    },\r\n\r\n    {\r\n      id: \"wikimedia commons location\",\r\n      template: \"{{Location dec|{latdegdec}|{londegdec}}}\",\r\n      tags: [\"geoformat\"]\r\n    },\r\n\r\n    {\r\n      id: \"geo uri\",\r\n      template: \"geo:{latdegdec},{londegdec}\",\r\n      tags: [\"geoformat\"]\r\n    },\r\n\r\n    {\r\n      id: \"geonames google\",\r\n      template:\r\n        \"http://www.geonames.org/maps/google_{latdegdec}_{londegdec}.html\",\r\n      tags: []\r\n    },\r\n\r\n    {\r\n      id: \"geolocator\",\r\n      template:\r\n        \"http://tools.freeside.sk/geolocator/geolocator.html?params={latdegdec}_{londegdec}\",\r\n      tags: []\r\n    },\r\n\r\n    {\r\n      id: \"geolinks\",\r\n      template: \"http://geolinks.kozlenko.info/?q={latdegdec},{londegdec}\",\r\n      tags: []\r\n    },\r\n    {\r\n      id: \"wikishootme\",\r\n      template: \"https://tools.wmflabs.org/wikishootme/index.html#lat={latdegdec}&lng={londegdec}&zoom={osmzoom}\"\r\n    }\r\n  ];\r\n\r\n  mod.resourcesHash = {};\r\n\r\n  mod.resources.forEach(function(x) {\r\n    mod.resourcesHash[x.id] = x;\r\n  });\r\n})(geolink);\r\n"]}