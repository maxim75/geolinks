{"version":3,"sources":["Geolinks.js","_ResourcesAll.js"],"names":["geolink","mod","fieldMatchRegExp","toDms","deg","d","parseInt","md","Math","abs","m","sd","toRad","x","PI","toDegrees","zoomToRadius","zoom","toBoundingBox","data","R","radius","lngOffset","cos","lat","latOffset","south","north","east","lng","west","defaultData","title","language","extendObject","obj1","obj2","i","hasOwnProperty","converters","{latdegdec}","{londegdec}","{osmzoom}","{title}","{titlee}","encodeURIComponent","{language}","{latdegabs}","{latminint}","{latsecdec}","toFixed","{latNS}","{londegabs}","{lonminint}","{lonsecdec}","{lonEW}","{bbSouth}","{bbNorth}","{bbEast}","{bbWest}","parsers","n","r","f","length","getLinkFromTemplate","template","convertFunc","replace","getFieldsFromTemplate","match","getLink","resourceId","resource","resourcesHash","parseUrl","url","result","formatIdx","parser","resources","id","tags","forEach"],"mappings":"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","file":"geolinks.min.js","sourcesContent":["/* \r\n * Copyright (C) 2015 Maksym Kozlenko <max@kozlenko.info>\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license.  See the LICENSE file for details.\r\n */\r\n\r\n var geolink = geolink || {};\r\n\r\n (function(mod) {\r\n\r\n \tvar fieldMatchRegExp = /\\{\\S+?\\}/mg;\r\n\r\n\tvar toDms = function(deg) {\r\n        var d = parseInt(deg, 10);\r\n        var md = Math.abs(deg-d) * 60;\r\n        var m = parseInt(md, 10);\r\n        var sd = (md - m) * 60;\r\n        return [d, m, sd];\r\n    };\r\n\r\n    var toRad = function(x) {\r\n\t\treturn x * Math.PI / 180;\r\n\t};\r\n\r\n\tvar toDegrees = function(x) {\r\n\t\treturn x * 180 / Math.PI;\r\n\t};\r\n\r\n\tvar zoomToRadius = function(zoom) {\r\n\t\treturn 5;\r\n\t};\r\n\r\n\tvar toBoundingBox = function(data) {\r\n\t\tvar R = 6371;  // earth radius in km\r\n\t\tvar radius = zoomToRadius(data.zoom); // km\r\n\r\n\t\tvar lngOffset = toDegrees(radius/R/Math.cos(toRad(data.lat)));\r\n\t\tvar latOffset = toDegrees(radius/R);\r\n\r\n\t\treturn {\r\n\t\t\t\"south\": data.lat - latOffset,\r\n\t\t\t\"north\": data.lat + latOffset,\r\n\t\t\t\"east\": data.lng + lngOffset,\r\n\t\t\t\"west\": data.lng - lngOffset,\r\n\t\t};\r\n\t};\r\n\r\n\tvar defaultData = {\r\n\t\tlat: 0, \r\n\t\tlng:  0, \r\n\t\tzoom: 15, \r\n\t\ttitle: \"\", \r\n\t\tlanguage: \"en\"\r\n\t};\r\n\r\n\tvar extendObject = function(obj1, obj2) {\r\n       for (var i in obj2) {\r\n          if (!obj1.hasOwnProperty(i)) {\r\n             obj1[i] = obj2[i];\r\n          }\r\n       }\r\n       return obj1;\r\n    };\r\n\r\n\tmod.converters = {\r\n\t\t\"{latdegdec}\": function(data) { return data.lat; },\r\n\t\t\"{londegdec}\": function(data) { return data.lng; },\r\n\t\t\"{osmzoom}\": function(data) { return data.zoom; },\r\n\t\t\"{title}\": function(data) { return data.title; },\r\n\t\t\"{titlee}\": function(data) { return encodeURIComponent(data.title); },\r\n\t\t\"{language}\": function(data) { return data.language || \"en\"; },\r\n\t\t\"{latdegabs}\": function(data) { return Math.abs(toDms(data.lat)[0]); },\r\n\t\t\"{latminint}\": function(data) { return toDms(data.lat)[1]; },\r\n\t\t\"{latsecdec}\": function(data) { return toDms(data.lat)[2].toFixed(4); },\r\n\t\t\"{latNS}\": function(data) { return data.lat < 0 ? \"S\" : \"N\"; },\r\n\t\t\"{londegabs}\": function(data) { return Math.abs(toDms(data.lng)[0]); },\r\n\t\t\"{lonminint}\": function(data) { return toDms(data.lng)[1]; },\r\n\t\t\"{lonsecdec}\": function(data) { return toDms(data.lng)[2].toFixed(4); },\r\n\t\t\"{lonEW}\": function(data) { return data.lng < 0 ? \"W\" : \"E\"; },\r\n\t\t\"{bbSouth}\": function(data) { return toBoundingBox(data).south; },\r\n\t\t\"{bbNorth}\": function(data) { return toBoundingBox(data).north; },\r\n\t\t\"{bbEast}\": function(data) { return toBoundingBox(data).east; },\r\n\t\t\"{bbWest}\": function(data) { return toBoundingBox(data).west; },\r\n\t};\r\n\r\n\tmod.parsers = [\r\n\t\t{ \r\n\t\t\tn: \"lat,lng\",\r\n\t\t\tr: /(-?\\d+\\.\\d+)[;, ](-?\\d+\\.\\d+)/, \r\n\t\t\tf: function(r) { \r\n\t\t\t\treturn (r && r.length === 3) ? { lat: r[1], lng: r[2] } : null; \r\n\t\t\t} \r\n\t\t} \r\n\t];\r\n\r\n\tmod.getLinkFromTemplate = function(template, data) {\r\n\t\tvar convertFunc = function(x) {\r\n\t\t\treturn mod.converters[x] ? mod.converters[x](data) : x;\r\n\t\t};\r\n\t\treturn template.replace(fieldMatchRegExp, convertFunc);\r\n\t};\r\n\r\n\tmod.getFieldsFromTemplate = function(template) {\r\n\t\treturn template.match(fieldMatchRegExp);\r\n\t};\r\n\r\n\tmod.getLink = function(resourceId, data) {\r\n\t\tvar resource = mod.resourcesHash[resourceId];\r\n\t\treturn mod.getLinkFromTemplate(resource.template, data);\r\n\t};\r\n\r\n\tmod.parseUrl = function(url) {\r\n\t\tvar result = {};\r\n\r\n\t\tfor(var formatIdx in mod.parsers) {\r\n\t\t\tvar parser = mod.parsers[formatIdx];\r\n\t\t\tresult = parser.f(url.match(parser.r));\r\n\t\t\tif(result) break;\r\n\t\t}\r\n\t\treturn result ? extendObject(result, defaultData) : null;\r\n\t};\r\n\r\n})(geolink);","/* \r\n * Copyright (C) 2015 Maksym Kozlenko <max@kozlenko.info>\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license.  See the LICENSE file for details.\r\n */\r\n\r\n var geolink = geolink || {};\r\n\r\n (function(mod) {\r\n\r\n    // https://en.wikipedia.org/wiki/Template:GeoTemplate\r\n    mod.resources = [\r\n        { \r\n            id: \"bing\", \r\n            template: \"https://www.bing.com/maps/?v=2&cp={latdegdec}~{londegdec}&style=r&lvl={osmzoom}&sp=Point.{latdegdec}_{londegdec}_{titlee}___\"\r\n        },\r\n\r\n        { \r\n            id: \"google\", \r\n            template: \"https://maps.google.com/maps?ll={latdegdec},{londegdec}&q={latdegdec},{londegdec}&hl={language}&t=m&z={osmzoom}\"\r\n        },\r\n\r\n        { \r\n            id: \"osm\", \r\n            template: \"https://www.openstreetmap.org/?mlat={latdegdec}&mlon={londegdec}&zoom={osmzoom}&layers=M\"\r\n        },\r\n\r\n        { \r\n            id: \"wikimapia\", \r\n            template: \"http://wikimapia.org/#lang={language}&lat={latdegdec}&lon={londegdec}&z={osmzoom}&m=w\"\r\n        },\r\n\r\n        { \r\n            id: \"geolocation.ws\", \r\n            template: \"https://www.geolocation.ws/map/{latdegdec},{londegdec}/{osmzoom}\",\r\n            tags: [ \"photo\" ]\r\n        },\r\n\r\n        { \r\n            id: \"yandex\", \r\n            template: \"https://maps.yandex.ru/?ll={londegdec},{latdegdec}&spn={span},{span}&l=map&pt={londegdec},{latdegdec}\"\r\n        },\r\n\r\n        { \r\n            id: \"fotki.yandex.ru\", \r\n            template: \"https://fotki.yandex.ru/map/?lng={latdegdec}&lat={londegdec}&zoom={osmzoom}\",\r\n            tags: [ \"photo\" ]\r\n        },\r\n\r\n        { \r\n            id: \"visicom\", \r\n            template: \"http://maps.visicom.ua/#lng={londegdec};lat={latdegdec};z=6;map=ukraine_en;lngm={londegdec};latm={latdegdec};\",\r\n            tags: [ \"country-ua\" ]\r\n        },\r\n\r\n        {\r\n            id: \"acme mapper\",\r\n            template: \"http://mapper.acme.com/?ll={latdegdec},{londegdec}&z={osmzoom}&t=M&marker0={latdegdec},{londegdec},{titlee}\"\r\n        },\r\n\r\n        {\r\n            id: \"arctic.io\",\r\n            template: \"http://www.arctic.io/wikipedia/?lon={londegdec}&lat={latdegdec}&title={titlee}\"\r\n        },\r\n\r\n        {\r\n            id: \"wikidata\",\r\n            template: \"https://tools.wmflabs.org/wikidata-todo/around.html?lat={latdegdec}&lon={londegdec}&radius=15&lang=en\"\r\n        },\r\n\r\n        {\r\n            id: \"commons\",\r\n            template: \"https://tools.wmflabs.org/wiwosm/osm-on-ol/commons-on-osm.php?zoom={osmzoom}&lat={latdegdec}&lon={londegdec}\",\r\n            tags: [ \"photo\" ]\r\n        },\r\n\r\n        {\r\n            id: \"flickr\",\r\n            template: \"https://www.flickr.com/map/?fLat={latdegdec}&fLon={londegdec}&zl={osmzoom}\",\r\n            tags: [ \"photo\" ]\r\n        },\r\n\r\n        {\r\n            id: \"panoramio\",\r\n            template: \"http://www.panoramio.com/map/#lt={latdegdec}&ln={londegdec}&z=0&k=0&a=1&tab=1\",\r\n            tags: [ \"photo\" ]\r\n        },\r\n\r\n        {\r\n            id: \"flightradar24\",\r\n            template: \"http://www.flightradar24.com/{latdegdec},{londegdec}/{osmzoom}\",\r\n            tags: [ \"transport\" ]\r\n        },\r\n\r\n        {\r\n            id: \"street-directory.com.au\",\r\n            template: \"http://www.street-directory.com.au/sd_new/genmap.cgi?x={londegdec}&y={latdegdec}&sizex=800&sizey=800&level=5&star=6\",\r\n            tags: [ \"country-au\" ]\r\n        },\r\n\r\n        {\r\n            id: \"mapillary\",\r\n            template: \"http://www.mapillary.com/map/search/{latdegdec}/{londegdec}/{osmzoom}\",\r\n            tags: [ \"photo\" ]\r\n        },\r\n\r\n        {\r\n            id: \"commercialrealestate.com.au\",\r\n            template: \"http://www.commercialrealestate.com.au/for-sale/?bb={bbNorth}%2C{bbSouth}%2C{bbEast}%2C{bbWest}%2C{osmzoom}\",\r\n            tags: [ \"real estate\", \"country-au\" ]\r\n        },\r\n\r\n        {\r\n            id: \"zillow\",\r\n            template: \"http://www.zillow.com/homes/for_sale/featured_sort/{bbNorth},{bbEast},{bbSouth},{bbWest}_rect/\",\r\n            tags: [ \"real estate\", \"country-us\" ]\r\n        },\r\n\r\n        {\r\n            id: \"osm missing streets\",\r\n            template: \"http://tools.geofabrik.de/osmi/?view=highways&lon={londegdec}&lat={latdegdec}&zoom={osmzoom}&overlays=name_missing_major,name_missing_minor\",\r\n            tags: [ \"osm\" ]\r\n        },\r\n\r\n        {\r\n            id: \"geohack\",\r\n            template: \"https://tools.wmflabs.org/geohack/geohack.php?pagename=Test&params={latdegabs}_{latminint}_{latsecdec}_{latNS}_{londegabs}_{lonminint}_{lonsecdec}_{lonEW}\",\r\n            tags: [ ]\r\n        },\r\n\r\n        {\r\n            id: \"wikimapia\",\r\n            template: \"http://wikimapia.org/#lang=en&lat={latdegdec}&lon={londegdec}&z={osmzoom}\",\r\n            tags: [ ]\r\n        },\r\n\r\n        {\r\n            id: \"geocaching\",\r\n            template: \"https://www.geocaching.com/map/?ll={latdegdec},{londegdec}&z={osmzoom}\",\r\n            tags: [ ]\r\n        },\r\n\r\n        {\r\n            id: \"waze\",\r\n            template: \"https://www.waze.com/livemap/?zoom={osmzoom}&lat={latdegdec}&lon={londegdec}\",\r\n            tags: [ \"transport\" ]\r\n        },\r\n\r\n\r\n        {\r\n            id: \"marinetraffic\",\r\n            template: \"https://www.marinetraffic.com/en/ais/home/centerx:{londegdec}/centery:{latdegdec}/zoom:{osmzoom}\",\r\n            tags: [ \"transport\" ]\r\n        },\r\n\r\n        {\r\n            id: \"latlon\",\r\n            template: \"{latdegdec},{londegdec}\",\r\n            tags: [ \"geoformat\" ]\r\n        },\r\n\r\n        {\r\n            id: \"wkt\",\r\n            template: \"POINT({londegdec} {latdegdec})\",\r\n            tags: [ \"geoformat\" ]\r\n        },\r\n\r\n        {\r\n            id: \"geojson\",\r\n            template: \"{ \\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [ {londegdec}, {latdegdec} ] }\",\r\n            tags: [ \"geoformat\" ]\r\n        },\r\n\r\n        {\r\n            id: \"wikipedia template\",\r\n            template: \"{{Coord |{latdegdec}|{londegdec}display=title} }\",\r\n            tags: [ \"geoformat\" ]\r\n        },\r\n\r\n        {\r\n            id: \"wikimedia commons location\",\r\n            template: \"{{Location dec|{latdegdec}|{londegdec}}}\",\r\n            tags: [ \"geoformat\" ]\r\n        },\r\n        \r\n        {\r\n            id: \"geo uri\",\r\n            template: \"geo:{latdegdec},{londegdec}\",\r\n            tags: [ \"geoformat\" ]\r\n        },\r\n\r\n        {\r\n            id: \"geonames google\",\r\n            template: \"http://www.geonames.org/maps/google_{latdegdec}_{londegdec}.html\",\r\n            tags: [ ]\r\n        },\r\n\r\n        {\r\n            id: \"geolocator\",\r\n            template: \"http://tools.freeside.sk/geolocator/geolocator.html?params={latdegdec}_{londegdec}\",\r\n            tags: [ ]\r\n        },\r\n\r\n    \r\n    ];\r\n\r\n    mod.resourcesHash = {};\r\n\r\n    mod.resources.forEach(function(x) {\r\n        mod.resourcesHash[x.id] = x;\r\n    });\r\n\r\n})(geolink);"],"sourceRoot":"/source/"}