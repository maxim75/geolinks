{"version":3,"sources":["Geolinks.js","_ResourcesAll.js"],"names":["geolink","mod","toDms","deg","d","parseInt","md","Math","abs","m","sd","toRad","x","PI","toDegrees","zoomToRadius","zoom","toBoundingBox","data","R","radius","lngOffset","cos","lat","latOffset","south","north","east","lng","west","converters","{latdegdec}","{londegdec}","{osmzoom}","{title}","title","{titlee}","encodeURIComponent","{language}","language","{latdegabs}","{latminint}","{latsecdec}","toFixed","{latNS}","{londegabs}","{lonminint}","{lonsecdec}","{lonEW}","{bbSouth}","{bbNorth}","{bbEast}","{bbWest}","getLinkFromTemplate","template","convertFunc","replace","getLink","resourceId","resource","resourcesHash","resources","id","tags","forEach"],"mappings":"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","file":"geolinks.min.js","sourcesContent":["/* \n * Copyright (C) 2015 Maksym Kozlenko <max@kozlenko.info>\n *\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n var geolink = geolink || {};\n\n (function(mod) {\n\n\t\n\n\tvar toDms = function(deg) {\n        var d = parseInt(deg, 10);\n        var md = Math.abs(deg-d) * 60;\n        var m = parseInt(md, 10);\n        var sd = (md - m) * 60;\n        return [d, m, sd];\n    };\n\n    var toRad = function(x) {\n\t\treturn x * Math.PI / 180;\n\t};\n\n\tvar toDegrees = function(x) {\n\t\treturn x * 180 / Math.PI;\n\t};\n\n\tvar zoomToRadius = function(zoom) {\n\t\treturn 5;\n\t};\n\n\tvar toBoundingBox = function(data) {\n\t\tvar R = 6371;  // earth radius in km\n\t\tvar radius = zoomToRadius(data.zoom); // km\n\n\t\tvar lngOffset = toDegrees(radius/R/Math.cos(toRad(data.lat)));\n\t\tvar latOffset = toDegrees(radius/R);\n\n\t\treturn {\n\t\t\t\"south\": data.lat - latOffset,\n\t\t\t\"north\": data.lat + latOffset,\n\t\t\t\"east\": data.lng + lngOffset,\n\t\t\t\"west\": data.lng - lngOffset,\n\t\t};\n\t};\n\n\tvar converters = {\n\t\t\"{latdegdec}\": function(data) { return data.lat; },\n\t\t\"{londegdec}\": function(data) { return data.lng; },\n\t\t\"{osmzoom}\": function(data) { return data.zoom; },\n\t\t\"{title}\": function(data) { return data.title; },\n\t\t\"{titlee}\": function(data) { return encodeURIComponent(data.title); },\n\t\t\"{language}\": function(data) { return data.language || \"en\"; },\n\t\t\"{latdegabs}\": function(data) { return Math.abs(toDms(data.lat)[0]); },\n\t\t\"{latminint}\": function(data) { return toDms(data.lat)[1]; },\n\t\t\"{latsecdec}\": function(data) { return toDms(data.lat)[2].toFixed(4); },\n\t\t\"{latNS}\": function(data) { return data.lat < 0 ? \"S\" : \"N\"; },\n\t\t\"{londegabs}\": function(data) { return Math.abs(toDms(data.lng)[0]); },\n\t\t\"{lonminint}\": function(data) { return toDms(data.lng)[1]; },\n\t\t\"{lonsecdec}\": function(data) { return toDms(data.lng)[2].toFixed(4); },\n\t\t\"{lonEW}\": function(data) { return data.lng < 0 ? \"W\" : \"E\"; },\n\t\t\"{bbSouth}\": function(data) { return toBoundingBox(data).south; },\n\t\t\"{bbNorth}\": function(data) { return toBoundingBox(data).north; },\n\t\t\"{bbEast}\": function(data) { return toBoundingBox(data).east; },\n\t\t\"{bbWest}\": function(data) { return toBoundingBox(data).west; },\n\t};\n\n\tmod.getLinkFromTemplate = function(template, data) {\n\t\tvar convertFunc = function(x) {\n\t\t\treturn converters[x] ? converters[x](data) : x;\n\t\t};\n\t\treturn template.replace(/\\{.+?\\}/mg, convertFunc);\n\t};\n\n\tmod.getLink = function(resourceId, data) {\n\t\tvar resource = mod.resourcesHash[resourceId];\n\t\treturn mod.getLinkFromTemplate(resource.template, data);\n\t};\n\n})(geolink);","/* \n * Copyright (C) 2015 Maksym Kozlenko <max@kozlenko.info>\n *\n * This software may be modified and distributed under the terms\n * of the MIT license.  See the LICENSE file for details.\n */\n\n var geolink = geolink || {};\n\n (function(mod) {\n\n    // https://en.wikipedia.org/wiki/Template:GeoTemplate\n    mod.resources = [\n        { \n            id: \"bing\", \n            template: \"https://www.bing.com/maps/?v=2&cp={latdegdec}~{londegdec}&style=r&lvl={osmzoom}&sp=Point.{latdegdec}_{londegdec}_{titlee}___\"\n        },\n\n        { \n            id: \"google\", \n            template: \"https://maps.google.com/maps?ll={latdegdec},{londegdec}&q={latdegdec},{londegdec}&hl={language}&t=m&z={osmzoom}\"\n        },\n\n        { \n            id: \"osm\", \n            template: \"https://www.openstreetmap.org/?mlat={latdegdec}&mlon={londegdec}&zoom={osmzoom}&layers=M\"\n        },\n\n        { \n            id: \"wikimapia\", \n            template: \"http://wikimapia.org/#lang={language}&lat={latdegdec}&lon={londegdec}&z={osmzoom}&m=w\"\n        },\n\n        { \n            id: \"geolocation.ws\", \n            template: \"https://www.geolocation.ws/map/{latdegdec},{londegdec}/{osmzoom}\",\n            tags: [ \"photo\" ]\n        },\n\n        { \n            id: \"yandex\", \n            template: \"https://maps.yandex.ru/?ll={londegdec},{latdegdec}&spn={span},{span}&l=map&pt={londegdec},{latdegdec}\"\n        },\n\n        { \n            id: \"visicom\", \n            template: \"http://maps.visicom.ua/#lng={londegdec};lat={latdegdec};z=6;map=ukraine_en;lngm={londegdec};latm={latdegdec};\",\n            tags: [ \"country-ua\" ]\n        },\n\n        {\n            id: \"acme mapper\",\n            template: \"http://mapper.acme.com/?ll={latdegdec},{londegdec}&z={osmzoom}&t=M&marker0={latdegdec},{londegdec},{titlee}\"\n        },\n\n        {\n            id: \"arctic.io\",\n            template: \"http://www.arctic.io/wikipedia/?lon={londegdec}&lat={latdegdec}&title={titlee}\"\n        },\n\n        {\n            id: \"wikidata\",\n            template: \"https://tools.wmflabs.org/wikidata-todo/around.html?lat={latdegdec}&lon={londegdec}&radius=15&lang=en\"\n        },\n\n        {\n            id: \"commons\",\n            template: \"https://tools.wmflabs.org/wiwosm/osm-on-ol/commons-on-osm.php?zoom={osmzoom}&lat={latdegdec}&lon={londegdec}\",\n            tags: [ \"photo\" ]\n        },\n\n        {\n            id: \"flickr\",\n            template: \"https://www.flickr.com/map/?fLat={latdegdec}&fLon={londegdec}&zl={osmzoom}\",\n            tags: [ \"photo\" ]\n        },\n\n        {\n            id: \"panoramio\",\n            template: \"http://www.panoramio.com/map/#lt={latdegdec}&ln={londegdec}&z=0&k=0&a=1&tab=1\",\n            tags: [ \"photo\" ]\n        },\n\n        {\n            id: \"flightradar24\",\n            template: \"http://www.flightradar24.com/{latdegdec},{londegdec}/{osmzoom}\",\n            tags: [  ]\n        },\n\n        {\n            id: \"street-directory.com.au\",\n            template: \"http://www.street-directory.com.au/sd_new/genmap.cgi?x={londegdec}&y={latdegdec}&sizex=800&sizey=800&level=5&star=6\",\n            tags: [ \"country-au\" ]\n        },\n\n        {\n            id: \"mapillary\",\n            template: \"http://www.mapillary.com/map/search/{bbSouth}/{bbNorth}/{bbWest}/{bbEast}\",\n            tags: [ \"photo\" ]\n        },\n\n        {\n            id: \"commercialrealestate.com.au\",\n            template: \"http://www.commercialrealestate.com.au/for-sale/?bb={bbNorth}%2C{bbSouth}%2C{bbEast}%2C{bbWest}%2C{osmzoom}\",\n            tags: [ \"real estate\", \"country-au\" ]\n        },\n\n        {\n            id: \"zillow\",\n            template: \"http://www.zillow.com/homes/for_sale/featured_sort/{bbNorth},{bbEast},{bbSouth},{bbWest}_rect/\",\n            tags: [ \"real estate\", \"country-us\" ]\n        },\n\n        {\n            id: \"osm missing streets\",\n            template: \"http://tools.geofabrik.de/osmi/?view=highways&lon={londegdec}&lat={latdegdec}&zoom={osmzoom}&overlays=name_missing_major,name_missing_minor\",\n            tags: [ \"osm\" ]\n        },\n\n        {\n            id: \"geohack\",\n            template: \"https://tools.wmflabs.org/geohack/geohack.php?pagename=Test&params={latdegabs}_{latminint}_{latsecdec}_{latNS}_{londegabs}_{lonminint}_{lonsecdec}_{lonEW}\",\n            tags: [ ]\n        },\n\n        \n    ];\n\n    mod.resourcesHash = {};\n\n    mod.resources.forEach(function(x) {\n        mod.resourcesHash[x.id] = x;\n    });\n\n})(geolink);"],"sourceRoot":"/source/"}